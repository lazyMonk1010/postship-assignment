/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/BCJ3i0dCQW4
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

'use client'
import Link from "next/link"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Label } from "@/components/ui/label"
import { ResponsiveLine } from "@nivo/line"
import { ChevronDown, Info, TriangleAlert, UserRound } from "lucide-react"
import { PieChart, Pie, Cell } from 'recharts'  
import { ClassAttributes, HTMLAttributes, JSX, SVGProps } from "react"

export function Component() {
  const pieData = [
    { name: 'Exception', value: 40 },
    { name: 'Intransit', value: 30 },
    { name: 'Pending', value: 20 },
    { name: 'Delivered', value: 10 },
    { name: 'Out for delivery', value: 5 },
  ]
  const COLORS = ['#8B4513', '#A0522D', '#CD853F', '#DEB887', '#F4A460']

  return (
    <div className="flex flex-col w-full min-h-screen">
      <header className="flex items-center h-16 px-4 border-b shrink-0 md:px-20">
        <nav className="flex-col hidden w-full gap-6 text-lg font-medium md:flex md:flex-row md:items-center md:gap-5 md:text-sm lg:gap-[32px]">
          <Link href="#" className="font-bold" prefetch={false}>
            Home
          </Link>
          <Link href="#" className="font-bold" prefetch={false}>
            Orders
          </Link>
          <Link href="#" className="font-bold" prefetch={false}>
            Integrations
          </Link>
          <Link href="#" className="font-bold flex" prefetch={false}>
            Tracking Page <span><ChevronDown/></span>
          </Link>
          <Link href="#" className="font-bold" prefetch={false}>
            Partner with Us
          </Link>
        </nav>
        <div className="flex items-center w-full gap-4 md:ml-auto md:gap-2 lg:gap-4">
          <form className="flex-1 ml-auto sm:flex-initial max-w-[120px]">
            <div className="relative border-b-2">
              <SearchIcon className="absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground" />
              <Input type="search" placeholder="Search" className="pl-8 border-none outline-none sm:w-[300px] md:w-[200px] lg:w-[300px]" />
            </div>
          </form>
          <Button variant="ghost" className="rounded-full flex">
            <UserRound className="w-[20px] h-[20px]"/>
            <span>Account</span>
          </Button>
          <Button variant="ghost" className="rounded-full flex">
            <SettingsIcon className="w-[20px] h-[20px]" />
            <span>Settings</span>
          </Button>
        </div>
      </header>
      <main className="flex flex-1 flex-col gap-4 bg-[#FFFDFA] md:gap-8">
        <section className="space-y-8 bg-[#FFFDFA] py-6 m-4 md:m-0 md:mx-20">
          <h1 className="text-2xl font-bold">Welcome, John Mathew!!</h1>
          <div className="grid gap-4 md:grid-cols-3">
            <Card className="bg-white p-4 rounded-[24px]">
              <CardContent className="">
                <p className="text-[14px] font-[650]">Order Sync Successful!</p>
                <p className="text-[13px] font-[450] mt-4">Your order details from the last 30 days have been successfully synced. Check them out now!</p>
                <Button className="bg-[#303030] mt-10 rounded-[18px]">Explore Your Orders</Button>
              </CardContent>
            </Card>
            <Card className="bg-[#FFF8DB] p-4 rounded-[24px]">
              <CardContent className="">
                <div className="flex gap-[8px] items-center">
                <TriangleAlert className="h-[20px] w-[20px]" />
                <p className="text-[14px] font-[650]">Customize Customer Notification</p>
                </div>
                <p className="text-[13px] font-[450] mt-4">Tailor Your Email Experience: Set the Sender Email and Choose Notification Triggers</p>
                <Button className="bg-[#303030] mt-10 rounded-[18px]">Configure Notifications</Button>
              </CardContent>
            </Card>
            <Card className="bg-[#EAF4FF] p-4 rounded-[24px]">
              <CardContent className="">
                <div className="flex gap-[8px] items-center">
                  <Info className="h-[20px] w-[20px]" />
                <p className="text-[14px] font-[650]">Your Tracking Link has been generated</p>
                </div>
                <p className="text-[13px] font-[450] mt-4">Include the Link to Your Store&apos;s Navigation Menu.</p>
                <div className="flex items-center mt-14 gap-2">
                  <Button variant="ghost" className="bg-[#fffff]">Copy Link</Button>
                  <Button className="bg-[#303030] rounded-[18px]">Go To Navigation Menu</Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </section>
          <section className="bg-[#FFF7EE] py-10 md:px-20">
          <h2 className="text-[24px] font-bold mb-8">Instant Dive into Your Performance Metrics</h2>
          <Tabs className="mb-8">
            <TabsList className="space-x-2">
              <TabsTrigger value={""} className="bg-white">Lifetime</TabsTrigger>
              <TabsTrigger value={""} className="bg-white">Last Week</TabsTrigger>
              <TabsTrigger value={""} className="bg-white">Last Month</TabsTrigger>
              <TabsTrigger value={""} className="bg-white">Last Year</TabsTrigger>
              <TabsTrigger value={""} className="bg-white">Customize Time Line</TabsTrigger>
            </TabsList>
          </Tabs>
          <div className="flex flex-wrap gap-4">
            <Card className="bg-white max-w-[500px] bg-[#fff] p-4 w-full">
              <CardContent className="space-y-2">
                <p className="text-lg font-semibold">Shipment Updates</p>
                <p>Total Orders: 394</p>
                <div className="flex gap-2">
                  <Button variant="outline" className="bg-[#DEB887]">Delivered</Button>
                <Button variant="outline" className="bg-[#d7d9db]">Out for delivery</Button>
                  <Button variant="outline" className="bg-[#d7d9db]">Intransit</Button>
                  <Button variant="outline" className="bg-[#d7d9db]">Pending</Button>
                </div>
                {/* <div className="mt-6 flex flex-col sm:flex-row"> */}
                <div className="w-full sm:w-1/2">
                  <PieChart width={300} height={300}>
                    <Pie
                      data={pieData}
                      cx={150}
                      cy={150}
                      innerRadius={30}
                      outerRadius={80}
                      fill="#8884d8"
                      paddingAngle={5}
                      dataKey="value"
                    >
                      {pieData.map((entry, index) => (
                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                      ))}
                    </Pie>
                  </PieChart>
                </div>
              </CardContent>
            </Card>
              <Card className="max-w-[216px] bg-[#956F00] flex gap-[24px]">
              <CardContent className="flex flex-col gap-[32px] py-4">
                <p className="text-lg font-semibold text-accent">Star Facts about your orders!!!</p>
                <p className="text-accent">
                  There are 8 shipments that have been in out for delivery for more than 3 days. There are 5 shipments
                  in exception right now. Miami chargebacks are from Miami.
                </p>
                <Button className="text-black bg-accent hover:text-accent h-[28px] w-[150px]">Check Orders Page</Button>
              </CardContent>
            </Card>
            <Card className="bg-[#fff] p-4 max-w-[447px] w-full relative">
              <CardContent className="space-y-2">
                <p className="text-lg font-semibold">Tracking Page Views Vs Orders</p>
                <p>
                  Understand user engagement patterns and optimize your tracking page for enhanced customer experiences.
                </p>
                <div className="flex flex-col w-full gap-2">
                  <div className="flex flex-col w-full bg-[#FFEBD5] p-4 rounded-[6px]">
                    <p>Orders</p>
                    <div className="flex items-center justify-between">
                    <ShoppingCartIcon className="w-6 h-6" />
                    <p className="text-2xl font-bold">80</p>
                    </div>
                  </div>
                  <div className="flex flex-col w-full bg-[#FFC879] p-4 rounded-[6px]">
                    <p>Tracking Page Views</p>
                    <div className="flex items-center justify-between">
                    <EyeIcon className="w-6 h-6" />
                    <p className="text-2xl font-bold">44</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </section>
        <section className="flex flex-col gap-10 py-10 md:px-20">
          <h2 className="text-xl font-bold">Discover the Heart of Our Functionality</h2>
          <div className="grid gap-4 md:grid-cols-3">
            <Card className="bg-white p-6">
              <CardContent className="space-y-6">
                <p className="text-lg font-semibold">Elevate Your Brand Aesthetics with Custom Tracking Page Styles</p>
                <p>Immerse your customers in a branded experience by personalizing the colors on your tracking page.</p>
                <div className="space-y-2">
                  <Label htmlFor="accent-color">Accent Color</Label>
                  <Input id="accent-color" placeholder="#FF9888" />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="text-color">Text Color</Label>
                  <Input id="text-color" placeholder="#571010" />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="background-color">Background Color</Label>
                  <Input id="background-color" placeholder="#FFEEAA" />
                </div>
                <div className="flex gap-2">
                  <Button>Preview</Button>
                  <Button variant="outline">Apply Colors</Button>
                </div>
              </CardContent>
            </Card>
            <div className="flex flex-col gap-10">
            <Card className="bg-white p-6">
              <CardContent className="space-y-6">
                <p className="text-lg font-semibold">Exclusive Onboarding Support for High-Volume Brands</p>
                <p>Unlock personalized guidance! Book a one-on-one onboarding call to streamline your experience.</p>
                <Button>Schedule A Call</Button>
              </CardContent>
            </Card>
            <Card className="bg-white p-6">
              <CardContent className="space-y-6">
                <p className="text-lg font-semibold">Explore Our Integrated Ecosystem</p>
                <p>Discover a variety of popular integrations tailored for your convenience.</p>
                <div className="flex gap-2">
                  <ShoppingCartIcon className="w-6 h-6" />
                  <ZapIcon className="w-6 h-6" />
                  <GaugeIcon className="w-6 h-6" />
                </div>
                <Button>Explore Integrations</Button>
              </CardContent>
            </Card>
            </div>
            <Card className="bg-white p-6">
              <CardContent className="space-y-6">
                <p className="text-lg font-semibold">Seamlessly Integrate Custom HTML Elements</p>
                <p>
                  Unleash creativity with our Custom HTML feature. Add links, custom messages, or any HTML content to
                  elevate the tracking page experience for your customers.
                </p>
                <div className="space-y-2">
                  <Label htmlFor="html-link">HTML Link</Label>
                  <Input id="html-link" placeholder="Value" className="border w-full h-[200px]"/>
                </div>
                <div className="flex gap-2">
                  <Button>Preview</Button>
                  <Button variant="outline">Apply changes</Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </section>
      </main>
    </div>
  )
}

function EyeIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}


function GaugeIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m12 14 4-4" />
      <path d="M3.34 19a10 10 0 1 1 17.32 0" />
    </svg>
  )
}


// function LineChart(props: JSX.IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>) {
//   return (
//     <div {...props}>
//       <ResponsiveLine
//         data={[
//           {
//             id: "Desktop",
//             data: [
//               { x: "Jan", y: 43 },
//               { x: "Feb", y: 137 },
//               { x: "Mar", y: 61 },
//               { x: "Apr", y: 145 },
//               { x: "May", y: 26 },
//               { x: "Jun", y: 154 },
//             ],
//           },
//           {
//             id: "Mobile",
//             data: [
//               { x: "Jan", y: 60 },
//               { x: "Feb", y: 48 },
//               { x: "Mar", y: 177 },
//               { x: "Apr", y: 78 },
//               { x: "May", y: 96 },
//               { x: "Jun", y: 204 },
//             ],
//           },
//         ]}
//         margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
//         xScale={{
//           type: "point",
//         }}
//         yScale={{
//           type: "linear",
//         }}
//         axisTop={null}
//         axisRight={null}
//         axisBottom={{
//           tickSize: 0,
//           tickPadding: 16,
//         }}
//         axisLeft={{
//           tickSize: 0,
//           tickValues: 5,
//           tickPadding: 16,
//         }}
//         colors={["#2563eb", "#e11d48"]}
//         pointSize={6}
//         useMesh={true}
//         gridYValues={6}
//         theme={{
//           tooltip: {
//             chip: {
//               borderRadius: "9999px",
//             },
//             container: {
//               fontSize: "12px",
//               textTransform: "capitalize",
//               borderRadius: "6px",
//             },
//           },
//           grid: {
//             line: {
//               stroke: "#f3f4f6",
//             },
//           },
//         }}
//         role="application"
//       />
//     </div>
//   )
// }


// function Package2Icon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
//   return (
//     <svg
//       {...props}
//       xmlns="http://www.w3.org/2000/svg"
//       width="24"
//       height="24"
//       viewBox="0 0 24 24"
//       fill="none"
//       stroke="currentColor"
//       strokeWidth="2"
//       strokeLinecap="round"
//       strokeLinejoin="round"
//     >
//       <path d="M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z" />
//       <path d="m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9" />
//       <path d="M12 3v6" />
//     </svg>
//   )
// }


// function PieChart(props) {
//   return (
//     <div {...props}>
//       <ResponsivePie
//         data={[
//           { id: "Jan", value: 111 },
//           { id: "Feb", value: 157 },
//           { id: "Mar", value: 129 },
//           { id: "Apr", value: 150 },
//           { id: "May", value: 119 },
//           { id: "Jun", value: 72 },
//         ]}
//         sortByValue
//         margin={{ top: 10, right: 10, bottom: 10, left: 10 }}
//         cornerRadius={0}
//         padAngle={0}
//         borderWidth={1}
//         borderColor={"#ffffff"}
//         enableArcLinkLabels={false}
//         arcLabel={(d) => `${d.id}`}
//         arcLabelsTextColor={"#ffffff"}
//         arcLabelsRadiusOffset={0.65}
//         colors={["#2563eb"]}
//         theme={{
//           labels: {
//             text: {
//               fontSize: "18px",
//             },
//           },
//           tooltip: {
//             chip: {
//               borderRadius: "9999px",
//             },
//             container: {
//               fontSize: "12px",
//               textTransform: "capitalize",
//               borderRadius: "6px",
//             },
//           },
//         }}
//         role="application"
//       />
//     </div>
//   )
// }


function SearchIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  )
}


function SettingsIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}


function ShoppingCartIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="8" cy="21" r="1" />
      <circle cx="19" cy="21" r="1" />
      <path d="M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12" />
    </svg>
  )
}


function ZapIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z" />
    </svg>
  )
}
